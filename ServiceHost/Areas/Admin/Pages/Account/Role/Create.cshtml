@page
@model ServiceHost.Areas.Admin.Pages.Account.Role.CreateModel
@{
    ViewData["AdminTitle"] = "افزودن دسترسی";
    Layout = "_AdminLayout";
}

<form asp-page="./Creat"
      method="post"
      data-ajax="true"
      data-callback=""
      data-action="Refresh"
      enctype="multipart/form-data">
    <div class="modal-body">
        <div class="row">
            <div class="col-md-6">
                <div class="form-group">
                    <label class="control-label">نام</label>
                    <input type="text" class="form-control" asp-for="command.Name">
                    <span asp-validation-for="command.Name" class="error"></span>
                </div>
            </div>
            <div class="col-md-6">
                <label class="control-label col-md-3">انتخاب دسترسی ها</label>
                <div class="col-md-12">
                    <select asp-for="command.permissions" asp-items="Model.Permissions" class="multi-select" multiple="multiple" id="my_multi_select3">
                    </select>
                   
                </div>
            </div>
        </div>
     
    </div>
    <div class="modal-footer">
        <button type="button" class="btn btn-default waves-effect" data-dismiss="modal">بستن</button>
        <button type="submit" class="btn btn-info waves-effect waves-light">ایجاد</button>
    </div>
</form>
@section Css{

    <link href="~/AdminThem/assets/jquery/multi-select.css" rel="stylesheet" />
}


@section scripts{

    <script src="~/AdminThem/assets/jquery/jquery.multi-select.js"></script>
    <script src="~/AdminThem/assets/jquery/jquery.quicksearch.js"></script>

    <script>
        jQuery(document).ready(function () {
            $('#my_multi_select3').multiSelect({
                selectableOptgroup: true,
                selectableHeader:
                    "<input type='text' class='form-control search-input' autocomplete='off' placeholder='search...'>",
                selectionHeader:
                    "<input type='text' class='form-control search-input' autocomplete='off' placeholder='search...'>",
                afterInit: function (ms) {
                    var that = this,
                        $selectableSearch = that.$selectableUl.prev(),
                        $selectionSearch = that.$selectionUl.prev(),
                        selectableSearchString =
                            '#' + that.$container.attr('id') + ' .ms-elem-selectable:not(.ms-selected)',
                        selectionSearchString = '#' + that.$container.attr('id') + ' .ms-elem-selection.ms-selected';
                    that.qs1 = $selectableSearch.quicksearch(selectableSearchString)
                        .on('keydown',
                            function (e) {
                                if (e.which === 40) {
                                    that.$selectableUl.focus();
                                    return false;
                                }
                            });
                    that.qs2 = $selectionSearch.quicksearch(selectionSearchString)
                        .on('keydown',
                            function (e) {
                                if (e.which == 40) {
                                    that.$selectionUl.focus();
                                    return false;
                                }
                            });
                },
                afterSelect: function () {
                    this.qs1.cache();
                    this.qs2.cache();
                },
                afterDeselect: function () {
                    this.qs1.cache();
                    this.qs2.cache();
                }
            });
        });
    </script>

}